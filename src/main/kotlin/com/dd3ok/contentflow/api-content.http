### 콘텐츠 생성
POST http://localhost:8080/api/v1/contents
Content-Type: application/json

{
  "title": "테스트 콘텐츠 제목",
  "body": "이것은 테스트 본문입니다.",
  "authorId": 1001,
  "tags": ["kotlin", "webflux"]
}

> {%
    client.global.set("contentId", response.body.id);
%}

###

### 모든 콘텐츠 목록 조회
GET http://localhost:8080/api/v1/contents

###


### 특정 콘텐츠 단건 조회 (id는 실제 생성된 ID로 변경해야 합니다)
GET http://localhost:8080/api/v1/contents/{{contentId}}

###

### 콘텐츠 수정 (id는 실제 생성된 ID로 변경)
PUT http://localhost:8080/api/v1/contents/{{contentId}}
Content-Type: application/json

{
  "title": "수정된 제목입니다.",
  "body": "수정된 본문 내용",
  "tags": ["kotlin", "spring", "update"]
}

###

### 콘텐츠 삭제 (id는 실제 생성된 ID로 변경)
DELETE http://localhost:8080/api/v1/contents/{{contentId}}

###

@authorId = 1001

### 작성자별 콘텐츠 목록 조회
GET http://localhost:8080/api/v1/contents/author/{{authorId}}

###

### 상태별 콘텐츠 목록 조회 (예: PUBLISHED)
GET http://localhost:8080/api/v1/contents/status/PUBLISHED

###